import org.gradle.jvm.toolchain.JavaLanguageVersion

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.1'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'com.google.cloud.tools.jib' version '3.3.2'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group 'org.togetherjava'
version '1.0-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(19)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation project(':JShellWrapper')
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.github.docker-java:docker-java-transport-httpclient5:3.3.4'
    implementation 'com.github.docker-java:docker-java-core:3.3.4'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
}

var outputImage = 'togetherjava.org:5001/togetherjava/jshellbackend:master' ?: 'latest'

jib {
    from.image = 'eclipse-temurin:19'
    to {
        image = outputImage
        auth {
            username = System.getenv('ORG_REGISTRY_USER') ?: ''
            password = System.getenv('ORG_REGISTRY_PASSWORD') ?: ''
        }
    }
    container {
        mainClass = 'org.togetherjava.jshellapi.Main'
        setCreationTime(java.time.Instant.now().toString())
    }
}

shadowJar {
    archiveBaseName.set('JShellPlaygroundBackend')
    archiveClassifier.set('')
    archiveVersion.set('')
}

tasks.named('test') {
    useJUnitPlatform()
}
