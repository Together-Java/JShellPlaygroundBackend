import java.time.Instant

plugins {
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'org.springdoc.openapi-gradle-plugin' version '1.8.0'
    id 'com.google.cloud.tools.jib' version '3.4.2'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

dependencies {
    implementation project(':JShellWrapper')
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.github.docker-java:docker-java-transport-httpclient5:3.3.6'
    implementation 'com.github.docker-java:docker-java-core:3.3.6'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.5.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
}

jib {
    from.image = 'eclipse-temurin:21'
    to {
        image = 'togetherjava.org:5001/togetherjava/jshellbackend:master' ?: 'latest'
        auth {
            username = System.getenv('ORG_REGISTRY_USER') ?: ''
            password = System.getenv('ORG_REGISTRY_PASSWORD') ?: ''
        }
    }
    container {
        mainClass = 'org.togetherjava.jshellapi.Main'
        setCreationTime(Instant.now().toString())
    }
}

shadowJar {
    archiveBaseName.set('JShellPlaygroundBackend')
    archiveClassifier.set('')
    archiveVersion.set('')
}
